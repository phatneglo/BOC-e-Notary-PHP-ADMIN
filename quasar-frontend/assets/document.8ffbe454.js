import{ax as d,aA as n,ay as u}from"./index.fce983f6.js";import{D as i}from"./document.4d9dbb53.js";const h=d("document",{state:()=>({documents:[],currentDocument:null,documentStats:{total:0,draft:0,submitted:0,pending_payment:0,notarized:0,rejected:0},isLoading:!1,error:null}),getters:{draftDocuments:s=>s.documents.filter(e=>e.status==="draft"),submittedDocuments:s=>s.documents.filter(e=>e.status==="submitted"),pendingPaymentDocuments:s=>s.documents.filter(e=>e.status==="pending_payment"),inQueueDocuments:s=>s.documents.filter(e=>e.status==="in_queue"),processingDocuments:s=>s.documents.filter(e=>e.status==="processing"),notarizedDocuments:s=>s.documents.filter(e=>e.status==="notarized"),rejectedDocuments:s=>s.documents.filter(e=>e.status==="rejected")},actions:{async fetchDocuments(s={}){var e,r;this.isLoading=!0,this.error=null;try{const t={...s};Object.keys(t).forEach(o=>{(t[o]===null||t[o]===void 0||t[o]==="")&&delete t[o]}),console.log("Document store fetching with cleaned params:",t);const a=await i.getDocuments(t);if(a.data.success){this.documents=a.data.data,console.log("Document store received",this.documents.length,"documents");const o={};this.documents.forEach(c=>{o[c.status]=(o[c.status]||0)+1}),console.log("Document statuses distribution:",o)}else this.error=a.data.message||"Failed to load documents";return this.documents}catch(t){throw console.error("Fetch documents error:",t),this.error=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to load documents",t}finally{this.isLoading=!1}},async fetchDocument(s){var e,r;this.isLoading=!0,this.error=null;try{const t=await i.getDocument(s);return t.data.success?this.currentDocument=t.data.data:this.error=t.data.message||"Failed to load document",this.currentDocument}catch(t){throw console.error("Fetch document error:",t),this.error=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to load document",t}finally{this.isLoading=!1}},async fetchDocumentStats(){var s,e;this.isLoading=!0;try{const r=await i.getDocumentSummary();return r.data.success&&(this.documentStats=r.data.data.by_status),this.documentStats}catch(r){console.error("Fetch document stats error:",r),n.create({type:"negative",message:((e=(s=r.response)==null?void 0:s.data)==null?void 0:e.message)||"Failed to load document statistics"})}finally{this.isLoading=!1}},async createDocument(s){var e,r;this.isLoading=!0,this.error=null;try{const t=await u.post("/documents",s);if(t.data.success)return this.documents.unshift(t.data.data),n.create({type:"positive",message:"Document created successfully"}),t.data.data;throw this.error=t.data.message||"Failed to create document",new Error(this.error)}catch(t){throw console.error("Create document error:",t),this.error=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to create document",t}finally{this.isLoading=!1}},async updateDocument(s,e){var r,t;this.isLoading=!0,this.error=null;try{const a=await u.put(`/documents/${s}`,e);if(a.data.success){const o=this.documents.findIndex(c=>c.document_id===s);return o!==-1&&(this.documents[o]={...this.documents[o],...e}),this.currentDocument&&this.currentDocument.document_id===s&&(this.currentDocument={...this.currentDocument,...e}),n.create({type:"positive",message:"Document updated successfully"}),!0}else throw this.error=a.data.message||"Failed to update document",new Error(this.error)}catch(a){throw console.error("Update document error:",a),this.error=((t=(r=a.response)==null?void 0:r.data)==null?void 0:t.message)||"Failed to update document",a}finally{this.isLoading=!1}},async submitDocument(s){var e,r;this.isLoading=!0,this.error=null;try{const t=await u.post(`/documents/${s}/submit`);if(t.data.success){const a=this.documents.findIndex(o=>o.document_id===s);return a!==-1&&(t.data.data?(this.documents[a].status=t.data.data.status||"submitted",this.documents[a].status_id=t.data.data.status_id,this.documents[a].status_name=t.data.data.status_name):this.documents[a].status="submitted"),this.currentDocument&&this.currentDocument.document_id===s&&(t.data.data?(this.currentDocument.status=t.data.data.status||"submitted",this.currentDocument.status_id=t.data.data.status_id,this.currentDocument.status_name=t.data.data.status_name):this.currentDocument.status="submitted"),n.create({type:"positive",message:"Document submitted successfully"}),t.data.data}else throw this.error=t.data.message||"Failed to submit document",new Error(this.error)}catch(t){throw console.error("Submit document error:",t),this.error=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to submit document",t}finally{this.isLoading=!1}},async deleteDocument(s){var e,r;this.isLoading=!0,this.error=null;try{const t=await u.delete(`/documents/${s}`);if(t.data.success)return this.documents=this.documents.filter(a=>a.document_id!==s),this.currentDocument&&this.currentDocument.document_id===s&&(this.currentDocument=null),n.create({type:"positive",message:"Document deleted successfully"}),!0;throw this.error=t.data.message||"Failed to delete document",new Error(this.error)}catch(t){throw console.error("Delete document error:",t),this.error=((r=(e=t.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to delete document",t}finally{this.isLoading=!1}}}});export{h as u};
